---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-master
  labels:
    app: back-end-tier
spec:
  replicas: 1
  selector:
    matchLabels:
      app: back-end-tier
  template:
    metadata:
      labels: 
        app: back-end-tier
    spec:
      containers:
        - image: redis
          name: redis-master
          ports:
            - containerPort: 6379
              name: redis-master
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
---
apiVersion: v1
kind: Service
metadata:
  name: redis-master
spec:
  selector:
    app: back-end-tier
  ports:
    - port: 6379
      targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-slave
  labels:
    app: slave-end-tier
spec:
  replicas: 2
  selector:
    matchLabels:
      app: slave-end-tier
  template:
    metadata:
      labels: 
        app: slave-end-tier
    spec:
      containers:
        - image: gcr.io/google_samples/gb-redisslave:v3
          name: slave-redis-nautilus
          ports:
            - containerPort: 6379
              name: redis-slave
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          env:
            - name: GET_HOSTS_FROM
              value: dns
---
apiVersion: v1
kind: Service
metadata:
  name: redis-slave
spec:
  selector:
    app: slave-end-tier
  ports:
    - port: 6379
      targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels: 
        app: frontend
    spec:
      containers:
        - image: gcr.io/google-samples/gb-frontend:v4
          name: php-redis-nautilus
          ports:
            - containerPort: 80
              name: frontend
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          env:
            - name: GET_HOSTS_FROM
              value: dns
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  type: NodePort
  selector:
    app: frontend
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30009
